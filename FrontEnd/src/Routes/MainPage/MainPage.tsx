import { useContext, useEffect, useState } from 'react';
import style from './MainPage.module.css';
import States from '../../Components/States';
import Publication from '../../Components/Publication/Publication';
import Tag from '../../Components/Main/Tag/Tag';
import Calendar from '../../Components/Main/Calendar/Calendar';
import DatePanel from 'react-multi-date-picker/plugins/date_panel';
import Box from '../../Components/Main/Box/Box';
import CalendarWithTags from '../../Components/CalendarWithTags/CalendarWithTags';
import Filters from '../../Components/Filters/Filters';
import DataList from '../../Components/DataList/DataList';
import Input from '../../Components/Main/Input/Input';
import FormInput from '../../Components/FormInput/FormInput';
import Button from '../../Components/Main/Button/Button';
import layouts from '../../layouts.module.css';
import CreatePublication from '../../Components/CreatePublication/CreatePublication';
import useIsFirstRender from '../../isFirstRender';
interface tak {
	id: number;
	name: string;
}

async function fetchPowiaty(wojId: number) {
	const res = await fetch(`http://localhost:3000/powiaty/${wojId}`);
	const json = await res.json();
	return json;
}
async function fetchGminy(powId: number) {
	const res = await fetch(`http://localhost:3000/gminy/${powId}`);
	const json = await res.json();
	return json;
}

const MainPage = () => {
	const context = useContext(States);

	const [publications, setPublications] = useState([]);

	const [isAddPublicationOpen, setIsAddPublicationOpen] = useState(false);

	const [wojewodztwa, setWojewodztwa] = useState<tak[]>([]);
	const [wojewodztwaSelected, setWojewodztwaSelected] = useState<
		tak | undefined
	>();
	const [powiaty, setPowiaty] = useState<tak[]>([]);
	const [powiatySelected, setPowiatySelected] = useState<tak | undefined>();

	const [gminy, setGminy] = useState<tak[]>([]);
	const [gminySelected, setGminySelected] = useState<tak | undefined>();

	const isFirstRender = useIsFirstRender();
	if (isFirstRender) {
		let w = async () => {
			let res = await fetch('http://localhost:3000/wojewodztwa');
			let json = await res.json();
			setWojewodztwa(json.wojewodztwa);

			let res2 = await fetch(`http://localhost:3000/publications`);
			let json2 = await res2.json();
			setPublications(json2.publications);
		};
		w();
		console.log('first render');
	}
	useEffect(() => {
		if (isFirstRender) return;
		console.log(wojewodztwa);

		fetchPowiaty(wojewodztwaSelected?.id || 0).then((res) => {
			console.log(res);
			if (res.powiaty) setPowiaty(res.powiaty);
		});
	}, [wojewodztwaSelected]);

	useEffect(() => {
		if (isFirstRender) return;
		console.log(powiaty);
		fetchGminy(powiatySelected?.id || 0).then((res) => {
			console.log(res);
			if (res.gminy) setGminy(res.gminy);
		});
	}, [powiatySelected]);

	return (
		<div className={layouts.center}>
			{/* <h1>CzeÅ›Ä‡</h1>
			<p>
				{context.isLoggedIn}, {context.userEmail}, {context.userFirstName},{' '}
				{context.userFirstName},{context.userEmail}, {context.userID},
				{context.userRanks}
			</p> */}
			<Filters className={style.filters} heading="Wyszukiwanie">
				<DataList
					title="Tagi: "
					id="tagi"
					data={['frytak', 'lize', 'psy']}
					placeholder="Tagi"
				/>
				<DataList
					title="Autorzy: "
					id="autorzy"
					data={['frytak', 'lize', 'psy']}
					placeholder="Autorzy"
				/>

				<DataList
					title="WojewÃ³dztwo: "
					id="wojewodztwa"
					data={wojewodztwa.map((woj) => woj.name)}
					placeholder="WojewÃ³dztwa"
					onChange={(e) =>
						setWojewodztwaSelected(
							wojewodztwa.find((woj) => woj.name == e.target.value)
						)
					}
				/>
				<DataList
					title="Powiat: "
					id="powiat"
					data={powiaty.map((pow) => pow.name)}
					placeholder="Powiat"
					onChange={(e) =>
						setPowiatySelected(
							powiaty.find((pow) => pow.name == e.target.value)
						)
					}
				/>
				<DataList
					title="Gmina: "
					id="gmina"
					data={gminy.map((gmin) => gmin.name)}
					onChange={(e) =>
						setGminySelected(gminy.find((gmin) => gmin.name == e.target.value))
					}
					placeholder="Gmina"
				/>
			</Filters>

			<main className={style.mainElements}>
				<Button
					className={style.addPublication}
					onClick={() => {
						setIsAddPublicationOpen(!isAddPublicationOpen);
					}}
				>
					{isAddPublicationOpen ? 'Ukryj' : 'Dodaj'} publikacjÄ™
				</Button>
				<CreatePublication
					className={isAddPublicationOpen ? null : style.addPublicationInvis}
					height="fit-content"
				></CreatePublication>
				{publications.map((pub: any) => (
					<Publication
						id={pub.id}
						date={new Intl.DateTimeFormat('en-Gb').format(new Date(pub.date))}
						user={pub.userId}
						title={pub.title}
						body={pub.body}
						footer={pub.footer}
					></Publication>
				))}

				<Publication
					id={'1'}
					date="05/05/2021"
					user="Boby Drop Tables"
					title={'To trzeba zmieniÄ‡!'}
					body={
						'Dzisiaj bÄ™dÄ…c w kawiarni zapomniaÅ‚em wziÄ…Å›Ä‡ ze sobÄ… telefonu, ktÃ³ry miaÅ‚em na stoliku. Gdy przyszedÅ‚em nastÄ™pnego dnia, obsÅ‚uga nie chciaÅ‚a mi go oddaÄ‡, choÄ‡ na moich oczach tego ranka jak wchodziÅ‚em to go zabierali sprzÄ…tajÄ…c! ðŸ˜¡ðŸ˜¡'
					}
					footer={
						<>
							<Tag text="Zgubione" emoji="ðŸ•¸" />
							<Tag text="Skarga" emoji="ðŸ’¢" />
							<Tag text="Kawusia" emoji="â˜•" backgroundColor={'var(--blue)'} />
						</>
					}
				/>
				<Publication
					id={'114234'}
					date="04/05/2021"
					user="Anna Marlena WoÅ‚oszyn III"
					title={'Plaaacki ðŸ¤¤ðŸ¤¤ðŸ¤¤'}
					body={
						'Aaaa, ja bardzo lubiÄ™ placki! MajÄ… bardzo dobrÄ… konsystencjÄ™, wszystkie placki sÄ… dobre, poza tymi jednymi plackami co znalazÅ‚am na drodze, one nie sÄ… dobre. Ale za to inne placki juÅ¼ sÄ… przeeepyszne! MogÅ‚a bym mÃ³wiÄ‡ o plackach caaaÅ‚y dzieÅ„. Ale sÄ… sprawy waÅ¼ne i sÄ… placki, niestety teraz zajmÄ™ siÄ™ sprawami waÅ¼nymi... Jak chodziÅ‚am po klatce schodowej poszukujÄ…c plackÃ³w, to niestety zauwaÅ¼yÅ‚am duÅ¼ego pajÄ…ka, ktÃ³ry mnie przeraziÅ‚, stoi przy tej pile mechanicznej, ktÃ³ra nie jest zabezpieczona i dzieci z Å‚atwoÅ›ciÄ… mogÄ… siÄ™ do niej dostaÄ‡. ProszÄ™, pozbÄ…dÅºcie siÄ™ pajÄ…ka, on nawet nie pÅ‚Ä…ci rÄ™ty ðŸ˜ª'
					}
					footer={
						<>
							<Tag text="Placki" emoji="ðŸ¥ž" backgroundColor={'var(--green)'} />
							<Tag text="Skarga" emoji="ðŸ’¢" />
						</>
					}
				/>
				<Publication
					id={'1146574234'}
					date="04/05/2021"
					user="Marek"
					title={'Koszenie trawy'}
					body={
						'Szybki zarobek za skoszenie trawnika. ZapÅ‚acÄ™ 1zÅ‚ za kaÅ¼dy metr kwadratowy. Koszenie trawnika w okolicy ul. Kolejowej 12. Zainteresowanych proszÄ™ o kontakt.'
					}
					footer={
						<Tag text="Money" emoji="ðŸ’¸" backgroundColor={'var(--green)'} />
					}
				/>
			</main>

			<div className={style.additionalElements}>
				<CalendarWithTags />
			</div>
		</div>
	);
};
/*  */
export default MainPage;
